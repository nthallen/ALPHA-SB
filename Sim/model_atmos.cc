#include <stdio.h>
#include <math.h>
#include "model_atmos.h"

bool model_atmos::get_PT(double alt, double &hPa, double &K) {
  int lo = 0, hi = table.size()-1;
  if (alt < table[lo].km ||
      alt > table[hi].km) return false;
  while (hi > lo+1) {
    int mid = (lo+hi)/2;
    if (alt < table[mid].km) {
      hi = mid;
    } else {
      lo = mid;
    }
  }
  double ki = (alt-table[lo].km)/(table[hi].km-table[lo].km);
  double lnhPa = table[lo].lnhPa + ki*(table[hi].lnhPa-table[lo].lnhPa);
  K = table[lo].K + ki*(table[hi].K-table[lo].K);
  hPa = exp(lnhPa);
  return true;
}

std::vector<model_atmos::model_row> model_atmos::table = {
  {-0.5,291.4,1074.77,6.97986 },
  { 0.0,288.1,1013.25,6.92092 },
  { 0.5,284.9,954.61,6.86130 },
  { 1.0,281.7,898.76,6.80102 },
  { 1.5,278.4,845.59,6.74003 },
  { 2.0,275.2,795.01,6.67835 },
  { 2.5,271.9,746.91,6.61594 },
  { 3.0,268.7,701.21,6.55281 },
  { 3.5,265.4,657.80,6.48890 },
  { 4.0,262.2,616.60,6.42422 },
  { 4.5,258.9,577.52,6.35874 },
  { 5.0,255.7,540.48,6.29246 },
  { 5.5,252.4,505.39,6.22533 },
  { 6.0,249.2,472.17,6.15734 },
  { 6.5,245.9,440.75,6.08848 },
  { 7.0,242.7,411.05,6.01871 },
  { 7.5,239.5,382.99,5.94801 },
  { 8.0,236.2,356.51,5.87636 },
  { 8.5,233.0,331.54,5.80375 },
  { 9.0,229.7,308.00,5.73010 },
  { 9.5,226.5,285.84,5.65543 },
  { 10.0,223.3,264.99,5.57969 },
  { 10.5,220.0,245.40,5.50289 },
  { 11.0,216.8,226.99,5.42491 },
  { 11.5,216.6,209.84,5.34635 },
  { 12.0,216.6,193.99,5.26781 },
  { 12.5,216.6,179.33,5.18923 },
  { 13.0,216.6,165.79,5.11072 },
  { 13.5,216.6,153.27,5.03220 },
  { 14.0,216.6,141.70,4.95371 },
  { 14.5,216.6,131.00,4.87520 },
  { 15.0,216.6,121.11,4.79670 },
  { 15.5,216.6,111.97,4.71823 },
  { 16.0,216.6,103.52,4.63976 },
  { 16.5,216.6,95.71,4.56132 },
  { 17.0,216.6,88.49,4.48289 },
  { 17.5,216.6,81.82,4.40452 },
  { 18.0,216.6,75.65,4.32612 },
  { 18.5,216.6,69.94,4.24764 },
  { 19.0,216.6,64.67,4.16930 },
  { 19.5,216.6,59.79,4.09084 },
  { 20.0,216.6,55.29,4.01259 },
  { 20.0,216.6,55.29,4.01259 },
  { 22.0,218.6,40.47,3.70056 },
  { 24.0,220.6,29.72,3.39182 },
  { 26.0,222.5,21.88,3.08557 },
  { 28.0,224.5,16.16,2.78254 },
  { 30.0,226.5,11.97,2.48240 },
  { 32.0,228.5,8.89,2.18493 },
  { 34.0,233.7,6.63,1.89221 },
  { 36.0,239.3,4.99,1.60643 },
  { 38.0,244.8,3.77,1.32734 },
  { 40.0,250.4,2.87,1.05466 },
  { 42.0,255.9,2.20,0.78846 },
  { 44.0,261.4,1.70,0.52768 },
  { 46.0,266.9,1.31,0.27231 },
  { 48.0,270.6,1.02,0.02274 },
  { 50.0,270.6,0.80,-0.22602 },
  { 52.0,269.0,0.62,-0.47465 },
  { 54.0,263.5,0.48,-0.72712 },
  { 56.0,258.0,0.37,-0.98457 },
  { 58.0,252.5,0.29,-1.24758 },
  { 60.0,247.0,0.22,-1.51595 },
  { 62.0,241.5,0.17,-1.79036 },
  { 64.0,236.0,0.13,-2.07147 },
  { 66.0,230.5,0.09,-2.35820 },
  { 68.0,225.1,0.07,-2.65200 },
  { 70.0,219.6,0.05,-2.95267 },
  { 72.0,214.3,0.04,-3.26100 },
  { 74.0,210.3,0.03,-3.57555 },
  { 76.0,206.4,0.02,-3.89566 },
  { 78.0,202.5,0.01,-4.22195 },
  { 80.0,198.6,0.01,-4.55448 },
  { 82.0,194.7,0.01,-4.89312 },
  { 84.0,190.8,0.01,-5.23854 },
  { 86.0,186.9,0.00,-5.59081 }
};
