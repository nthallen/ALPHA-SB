Moduledef PropMtr [ ID=Left HDR=@ID@ ADDR=63 IDX=0 FAST=2 SLOW=1 RT1=/* RT2=*/ DAT=<uint8_t> HOME=1700 RPMSGN= Panel= ] {
  ID is a mnemonic for the motor
  HDR what to show on the screen
  ADDR is the Modbus address of the motor controller
  IDX is the index into the PropMtr.Ctrl and PropMtr_fast.Ctrl arrays.
  FAST is the rate of the fast data
  SLOW is the rate of the slow data
  RT1 is text that preceeds the declaration of the Right channel variables
  RT2 is text that follows the declaration of the Right channel variables
    The defaults for these two serve to comment out that declaration in
    pmc.tmc.in. Hence, if you have both drives, you need to redefine these
    in the 'groups' mode:
      Module PropMtr mode=groups RT1= RT2=
  DAT is the device address type for pmc_drv.cmd.in. It can only be defined
    once, so on the second invocation of either mode types or mode default,
    it must be cleared:
      Module PropMtr ID=Right ... DAT=
  HOME is the home position when locking the props.
  
  If any invocations occur, at least two are required. The first must be
  declared with mode=types to define everything that is common to both
  drives. The last invocation must be with mode=groups along with the
  definitions of RT1 and RT2 as noted above.
  
  Note that the groups mode includes all the variables defined in default
  with hard-coded IDs of 'Left' and 'Right'. If we were to change those
  designations to 'Port' and 'Starboard' to match the usage elsewhere, it
  is not sufficient to change the spec file invocations. Perhaps an ID2
  variable should be provided.
}

mode (types) {
  tmcbase = pmc_types.tmc:pmc_types.tmc.in
  colbase = pmc_col.tmc:pmc_col.tmc.in
  cmdbase = pmc_base.cmd:pmc_base.cmd.in
  genuibase = pmc.genui:pmc.genui.in
  - : pmc.tma:pmc.tma.in
  DISTRIB = @MODDIR@/../PropMtr
  CPPFLAGS = -I @MODDIR@/..
  IGNORE = pmc_types.tmc
  IGNORE = pmc_col.tmc
  IGNORE = pmc_base.cmd
  IGNORE = pmc.genui
  IGNORE = pmc.tma
  OBJ = pmc_types.tmc
  OBJ = pmc_col.tmc
  OBJ = pmc_base.cmd
  OBJ = pmc.genui
  OBJ = pmc.tma
  %%
.PHONY : clean-PropMtr @MODDIR@/../PropMtr
@MODDIR@/../PropMtr :
	$(MAKE) --directory=@MODDIR@/..
clean-dist : clean-PropMtr
clean-PropMtr :
	$(MAKE) --directory=@MODDIR@/.. clean
}

mode (default,types) {
  tmcbase = pmc_@ID@.tmc:pmc_drv.tmc.in
  cmdbase = pmc_@ID@.cmd:pmc_drv.cmd.in
  genuibase = pmc_@ID@.genui:pmc_drv.genui.in
  extbase = pmc_@ID@_conv.tmc:pmc_drv_conv.tmc.in
  - : pmc_@ID@.tma:pmc_drv.tma.in
  - : pmc_@ID@.tbl:pmc.tbl.in
  IGNORE = pmc_@ID@.tmc
  IGNORE = pmc_@ID@.cmd
  IGNORE = pmc_@ID@.genui
  IGNORE = pmc_@ID@_conv.tmc
  IGNORE = pmc_@ID@.tma
  IGNORE = pmc_@ID@.tbl
  OBJ = pmc_@ID@.tmc
  OBJ = pmc_@ID@.cmd
  OBJ = pmc_@ID@.genui
  OBJ = pmc_@ID@_conv.tmc
  OBJ = pmc_@ID@.tma
  OBJ = pmc_@ID@.tbl
}

mode (groups) {
  tmcbase = pmc.tmc:pmc.tmc.in
  IGNORE = pmc.tmc
  OBJ = pmc.tmc
}
