%{
  #include "Ascender.h"
%}
TM "Receive" Ascender 1;

TM typedef uint16_t asc_hoist_v_t { text "%6.1lf"; }
TM typedef uint8_t asc_hoist_i_t { text "%3u"; }
TM typedef int16_t asc_pos_t { text "%5d"; }
TM typedef int8_t asc_speed_t { text "%5.1lf"; }
TM typedef int8_t asc_speedcmd_t { text "%4d"; }
TM typedef uint8_t asc_status_t { text "%3u"; }
TM typedef int8_t asc_temp_t { text "%4d"; }

TM @RATE@ Hz asc_hoist_v_t AscHoistV;
TM @RATE@ Hz asc_hoist_i_t AscHoistI;
TM @RATE@ Hz asc_pos_t AscPosition;
TM @RATE@ Hz asc_speed_t AscSpeed;
TM @RATE@ Hz asc_speedcmd_t AscSpeedCmd;
TM @RATE@ Hz asc_temp_t AscTemp[4];
TM @RATE@ Hz asc_status_t AscStatus;
TM @RATE@ Hz asc_status_t AscNreports;
TM @RATE@ Hz asc_status_t AscStale;

Group Ascend (AscHoistV, AscHoistI, AscPosition, AscSpeed,
      AscSpeedCmd, AscTemp, AscStatus, AscNreports, AscStale) {
  AscHoistV = Ascender.HoistV;
  AscHoistI = Ascender.HoistI;
  AscPosition = Ascender.Position;
  AscSpeed = Ascender.Speed;
  AscSpeedCmd = Ascender.SpeedCmd
  AscTemp = Ascender.Temp;
  AscNreports = Ascender.Nreports;
  AscStale = Ascender_obj->Stale(255);
  Ascender_obj->synch();
}
