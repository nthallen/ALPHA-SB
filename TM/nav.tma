
Partition

State heading_idle {}

{ nav_set_gains(Nav_PGain, Nav_IGain, Nav_Dgain); }
{ nav_set_course(Course, Nav_Thrust); }

State heading_PID {
  { nav_set_rpm_pid(heading); }
}

{ STATE (FF_idle, FF_init, FF_accel, FF_coast, FF_decel);
  int16_t FF_Ta, FF_Tb, FF_count;
  double FF_dThrust;
  depending on (PMC_Left_RPM, FF_init) {
    FF_count = FF_ta;
    nav_set_rpm_dth(FF_dThrust);
    Validate FF_accel;
  }
  depending on (PMC_Left_RPM, FF_accel) {
    if (FF_count-- <= 0) {
      nav_set_rpm_dth(0);
      FF_count = FF_Tb;
      Validate FF_coast;
    }
  }
  depending on (PMC_Left_RPM, FF_coast) {
    if (FF_count-- <= 0) {
      nav_set_rpm_dth(-FF_dThrust);
      FF_count = FF_Ta;
      Validate FF_decel;
    }
  }
  depending on (PMC_Left_RPM, FF_decel) {
    if (FF_count-- <= 0) {
      nav_set_rpm_dth(0);
      FF_count = 0;
      Validate FF_idle;
    }
  }
}

State heading_FF {
      > _Set Nav Status FF_Init
      { FF_Ta = 30;
        FF_Tb = 30;
        /* FF_dThrust = 5; */
        Validate FF_init;
      }
      Hold until valid (FF_accel) or 10
      else Validate heading_FF_fail;
      Hold until valid (FF_idle) or 60
      else Validate heading_FF_fail;
      > _Set Nav Status FF_Coast
  
  +10 { FF_dThrust = -FF_dThrust;
        Validate FF_init;
      }
      Hold until valid (FF_accel) or 10
      else Validate heading_FF_fail;
      Hold until valid (FF_idle) or 60
      else Validate heading_FF_fail;
      > _Set Nav Status FF_Done
      { FF_dThrust = -FF_dThrust; }

  +10 > _Set Nav Status PID
      Validate heading_PID;
}

State heading_FF_fail {
  { msg(MSG_ERROR, "heading_FF_fail: count=%d", FF_count); }
}

Partition

State survey_idle {}

%{ double FF_dThrust0 = 1;
   double FF_dThrust1 = 10;
   double FF_ddThrust = 1;
%}
State survey_init {
  { FF_dThrust = FF_dThrust0; }
  Validate heading_PID;
  Hold until (convert(angular_velocity_z) < 0.1 &&
              convert(angular_velocity_z) > -0.1 &&
              convert(heading) < 0.2 &&
              convert(heading) > -0.2) or 5:00;
  Validate survey_step;
}

State survey_step {
  { msg(0, "survey_step: dThrust:%.1lf ddThrust=%.1lf",
        FF_dThrust, FF_ddThrust);
  }
  Validate heading_FF;
  Hold until valid (heading_FF) or 10;
  Hold until valid (heading_PID);
  Hold until (convert(angular_velocity_z) < 0.1 &&
              convert(angular_velocity_z) > -0.1 &&
              convert(heading) < 0.2 &&
              convert(heading) > -0.2) or 5:00;
  { FF_dThrust += FF_ddThrust;
    if (FF_dThrust > FF_dThrust1)
      Validate survey_idle;
    else Validate survey_step;
  }
}

